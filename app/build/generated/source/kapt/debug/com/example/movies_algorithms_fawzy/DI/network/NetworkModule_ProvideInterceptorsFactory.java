// Generated by Dagger (https://google.github.io/dagger).
package com.example.movies_algorithms_fawzy.DI.network;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import java.util.ArrayList;
import okhttp3.Interceptor;

public final class NetworkModule_ProvideInterceptorsFactory
    implements Factory<ArrayList<Interceptor>> {
  private final NetworkModule module;

  public NetworkModule_ProvideInterceptorsFactory(NetworkModule module) {
    this.module = module;
  }

  @Override
  public ArrayList<Interceptor> get() {
    return provideInstance(module);
  }

  public static ArrayList<Interceptor> provideInstance(NetworkModule module) {
    return proxyProvideInterceptors(module);
  }

  public static NetworkModule_ProvideInterceptorsFactory create(NetworkModule module) {
    return new NetworkModule_ProvideInterceptorsFactory(module);
  }

  public static ArrayList<Interceptor> proxyProvideInterceptors(NetworkModule instance) {
    return Preconditions.checkNotNull(
        instance.provideInterceptors(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
