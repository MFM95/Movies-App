// Generated by Dagger (https://google.github.io/dagger).
package com.example.movies_algorithms_fawzy.DI.application;

import android.content.Context;
import com.example.movies_algorithms_fawzy.Common.imagehelper.ImageLoader;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class AppModule_ProvideImageLoaderFactory implements Factory<ImageLoader> {
  private final AppModule module;

  private final Provider<Context> contextProvider;

  public AppModule_ProvideImageLoaderFactory(AppModule module, Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public ImageLoader get() {
    return provideInstance(module, contextProvider);
  }

  public static ImageLoader provideInstance(AppModule module, Provider<Context> contextProvider) {
    return proxyProvideImageLoader(module, contextProvider.get());
  }

  public static AppModule_ProvideImageLoaderFactory create(
      AppModule module, Provider<Context> contextProvider) {
    return new AppModule_ProvideImageLoaderFactory(module, contextProvider);
  }

  public static ImageLoader proxyProvideImageLoader(AppModule instance, Context context) {
    return Preconditions.checkNotNull(
        instance.provideImageLoader(context),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
