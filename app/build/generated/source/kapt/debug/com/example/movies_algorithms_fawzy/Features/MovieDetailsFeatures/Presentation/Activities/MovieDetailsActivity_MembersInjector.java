// Generated by Dagger (https://google.github.io/dagger).
package com.example.movies_algorithms_fawzy.Features.MovieDetailsFeatures.Presentation.Activities;

import com.example.movies_algorithms_fawzy.Common.imagehelper.ImageLoader;
import com.example.movies_algorithms_fawzy.Features.MovieDetailsFeatures.Presentation.ViewModels.MovieDetailsVMFactory;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class MovieDetailsActivity_MembersInjector
    implements MembersInjector<MovieDetailsActivity> {
  private final Provider<MovieDetailsVMFactory> factoryProvider;

  private final Provider<ImageLoader> imageLoaderProvider;

  public MovieDetailsActivity_MembersInjector(
      Provider<MovieDetailsVMFactory> factoryProvider, Provider<ImageLoader> imageLoaderProvider) {
    this.factoryProvider = factoryProvider;
    this.imageLoaderProvider = imageLoaderProvider;
  }

  public static MembersInjector<MovieDetailsActivity> create(
      Provider<MovieDetailsVMFactory> factoryProvider, Provider<ImageLoader> imageLoaderProvider) {
    return new MovieDetailsActivity_MembersInjector(factoryProvider, imageLoaderProvider);
  }

  @Override
  public void injectMembers(MovieDetailsActivity instance) {
    injectFactory(instance, factoryProvider.get());
    injectImageLoader(instance, imageLoaderProvider.get());
  }

  public static void injectFactory(MovieDetailsActivity instance, MovieDetailsVMFactory factory) {
    instance.factory = factory;
  }

  public static void injectImageLoader(MovieDetailsActivity instance, ImageLoader imageLoader) {
    instance.imageLoader = imageLoader;
  }
}
