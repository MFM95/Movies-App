// Generated by Dagger (https://google.github.io/dagger).
package com.example.movies_algorithms_fawzy.DI.MovieDetails;

import com.example.movies_algorithms_fawzy.Features.MovieDetailsFeatures.Data.MovieDetailsAPI;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class MovieDetailsModule_ProvidesMovieDetailsAPIFactory
    implements Factory<MovieDetailsAPI> {
  private final MovieDetailsModule module;

  private final Provider<Retrofit> retrofitProvider;

  public MovieDetailsModule_ProvidesMovieDetailsAPIFactory(
      MovieDetailsModule module, Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public MovieDetailsAPI get() {
    return provideInstance(module, retrofitProvider);
  }

  public static MovieDetailsAPI provideInstance(
      MovieDetailsModule module, Provider<Retrofit> retrofitProvider) {
    return proxyProvidesMovieDetailsAPI(module, retrofitProvider.get());
  }

  public static MovieDetailsModule_ProvidesMovieDetailsAPIFactory create(
      MovieDetailsModule module, Provider<Retrofit> retrofitProvider) {
    return new MovieDetailsModule_ProvidesMovieDetailsAPIFactory(module, retrofitProvider);
  }

  public static MovieDetailsAPI proxyProvidesMovieDetailsAPI(
      MovieDetailsModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNull(
        instance.providesMovieDetailsAPI(retrofit),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
