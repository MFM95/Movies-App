// Generated by Dagger (https://google.github.io/dagger).
package com.example.movies_algorithms_fawzy.Features.MoviesFeature.Presentation.ViewModels;

import com.example.movies_algorithms_fawzy.Features.MoviesFeature.Domain.Interactors.GetMoviesUseCase;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class TopRatedMoviesViewModel_Factory implements Factory<TopRatedMoviesViewModel> {
  private final Provider<GetMoviesUseCase> getMoviesUseCaseProvider;

  public TopRatedMoviesViewModel_Factory(Provider<GetMoviesUseCase> getMoviesUseCaseProvider) {
    this.getMoviesUseCaseProvider = getMoviesUseCaseProvider;
  }

  @Override
  public TopRatedMoviesViewModel get() {
    return provideInstance(getMoviesUseCaseProvider);
  }

  public static TopRatedMoviesViewModel provideInstance(
      Provider<GetMoviesUseCase> getMoviesUseCaseProvider) {
    return new TopRatedMoviesViewModel(getMoviesUseCaseProvider.get());
  }

  public static TopRatedMoviesViewModel_Factory create(
      Provider<GetMoviesUseCase> getMoviesUseCaseProvider) {
    return new TopRatedMoviesViewModel_Factory(getMoviesUseCaseProvider);
  }

  public static TopRatedMoviesViewModel newTopRatedMoviesViewModel(
      GetMoviesUseCase getMoviesUseCase) {
    return new TopRatedMoviesViewModel(getMoviesUseCase);
  }
}
