// Generated by Dagger (https://google.github.io/dagger).
package com.example.movies_algorithms_fawzy.Features.MovieDetailsFeatures.Presentation.ViewModels;

import com.example.movies_algorithms_fawzy.Features.MovieDetailsFeatures.Domain.Interactors.GetMovieDetailsUSeCase;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class MovieDetailsViewModel_Factory implements Factory<MovieDetailsViewModel> {
  private final Provider<GetMovieDetailsUSeCase> getMovieDetailsUSeCaseProvider;

  public MovieDetailsViewModel_Factory(
      Provider<GetMovieDetailsUSeCase> getMovieDetailsUSeCaseProvider) {
    this.getMovieDetailsUSeCaseProvider = getMovieDetailsUSeCaseProvider;
  }

  @Override
  public MovieDetailsViewModel get() {
    return provideInstance(getMovieDetailsUSeCaseProvider);
  }

  public static MovieDetailsViewModel provideInstance(
      Provider<GetMovieDetailsUSeCase> getMovieDetailsUSeCaseProvider) {
    return new MovieDetailsViewModel(getMovieDetailsUSeCaseProvider.get());
  }

  public static MovieDetailsViewModel_Factory create(
      Provider<GetMovieDetailsUSeCase> getMovieDetailsUSeCaseProvider) {
    return new MovieDetailsViewModel_Factory(getMovieDetailsUSeCaseProvider);
  }

  public static MovieDetailsViewModel newMovieDetailsViewModel(
      GetMovieDetailsUSeCase getMovieDetailsUSeCase) {
    return new MovieDetailsViewModel(getMovieDetailsUSeCase);
  }
}
