// Generated by Dagger (https://google.github.io/dagger).
package com.example.movies_algorithms_fawzy.DI.TopRatedMovies;

import com.example.movies_algorithms_fawzy.Features.MoviesFeature.Data.MoviesAPI;
import com.example.movies_algorithms_fawzy.Features.MoviesFeature.Domain.Repos.MoviesRepo;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class TopRatedModule_ProvidesMoviesRepoFactory implements Factory<MoviesRepo> {
  private final TopRatedModule module;

  private final Provider<MoviesAPI> moviesAPIProvider;

  public TopRatedModule_ProvidesMoviesRepoFactory(
      TopRatedModule module, Provider<MoviesAPI> moviesAPIProvider) {
    this.module = module;
    this.moviesAPIProvider = moviesAPIProvider;
  }

  @Override
  public MoviesRepo get() {
    return provideInstance(module, moviesAPIProvider);
  }

  public static MoviesRepo provideInstance(
      TopRatedModule module, Provider<MoviesAPI> moviesAPIProvider) {
    return proxyProvidesMoviesRepo(module, moviesAPIProvider.get());
  }

  public static TopRatedModule_ProvidesMoviesRepoFactory create(
      TopRatedModule module, Provider<MoviesAPI> moviesAPIProvider) {
    return new TopRatedModule_ProvidesMoviesRepoFactory(module, moviesAPIProvider);
  }

  public static MoviesRepo proxyProvidesMoviesRepo(TopRatedModule instance, MoviesAPI moviesAPI) {
    return Preconditions.checkNotNull(
        instance.providesMoviesRepo(moviesAPI),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
